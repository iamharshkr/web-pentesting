#!/bin/bash

# Function to display usage information
display_usage() {
  echo "Usage: ./pentest.sh <domain>"
  echo "Options:"
  echo "  -h   Display this help message"
  echo "  -d   Enter Domain name eg: example.com"
  echo
}

# Check if the domain is provided or help option is selected
if [ $# -eq 0 ] || [ "$1" == "-h" ]; then
  display_usage
  exit 0
fi

# Check if required tools are installed
check_tool() {
  if ! command -v "$1" &> /dev/null; then
    echo "The '$1' tool is not installed."
    missing_tools+=("$1")
  fi
}

# Check if all required tools are installed
missing_tools=()
check_tool subfinder
check_tool subjack
check_tool nmap
check_tool xsser
check_tool sqlmap
check_tool dirb
check_tool tcpdump

# Install missing tools if user chooses to install
if [ ${#missing_tools[@]} -gt 0 ]; then
  echo "The following tools are missing: ${missing_tools[*]}"
  read -rp "Do you want to install them? (y/n): " choice
  if [ "$choice" == "y" ] || [ "$choice" == "Y" ]; then
    sudo apt-get install "${missing_tools[@]}"
  else
    echo "Please install the missing tools manually and re-run the script."
    exit 1
  fi
fi

# Store the domain in a variable
domain=$1


# Script to automate the penetration testing process for subdomains

# Usage: ./pentest.sh <domain>

# Check if the domain is provided
if [ $# -eq 0 ]; then
  echo "Usage: ./pentest.sh <domain>"
  exit 1
fi

# Store the domain in a variable
domain=$1

# Create a directory for the domain
result_dir="pentest_results/$domain"
mkdir -p "$result_dir"
cd "$result_dir" || exit

# Find subdomains using subfinder
echo "Finding subdomains using subfinder..."

subfinder -d "$domain" -o subdomains.txt

# Check if subdomains file exists
if [ ! -f subdomains.txt ]; then
  echo "Subdomains file not found. Exiting..."
  exit 1
fi

# Loop through each subdomain and perform tests
while IFS= read -r subdomain; do
  echo "----------------------------------------"
  echo "Performing tests for subdomain: $subdomain"
  echo "----------------------------------------"

  # Perform subdomain takeover check
  echo "Performing subdomain takeover check for $subdomain..."
  subjack -w subdomains.txt -a -ssl -t 100 -timeout 30 -o subdomain_takeover.txt

  # Perform vulnerability assessment with nmap
  echo "Performing vulnerability assessment with nmap for $subdomain..."
  nmap -v -sV -Pn --script vuln "$subdomain" -oN "$subdomain"_vuln_scan.txt

  # Perform XSS attack
  echo "Performing XSS attack for $subdomain..."
  xsser -u "http://$subdomain" -g -v 3

  # Perform SQL injection testing with sqlmap
  echo "Performing SQL injection testing with sqlmap for $subdomain..."
  sqlmap -u "http://$subdomain" --batch --dump-all --crawl=5

  # Perform directory and file enumeration with dirb
  echo "Performing directory and file enumeration with dirb for $subdomain..."
  dirb "http://$subdomain" -r -v -o "$subdomain"_dirb_results.txt

  # Perform network traffic analysis with tcpdump
  echo "Performing network traffic analysis with tcpdump for $subdomain..."
  tcpdump -i eth0 host "$subdomain" -w "$subdomain"_network_traffic.pcap

done <subdomains.txt

# Clean up
cd ..
echo "Penetration testing completed. Results are stored in the pentest_results directory."
exit 0
